services:
  db:
    image: postgres:16
    container_name: jobportal_db_container
    restart: always
    environment:
      POSTGRES_DB: jobportal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345@123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "jobportal"]
      interval: 10s
      retries: 5

  redis:
    image: "redis:alpine"
    container_name: jobportal_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jobportal_web
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      POSTGRES_DB: jobportal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345@123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8000:8000"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jobportal_celery
    restart: always
    depends_on:
      - web
      - redis
      - db
    command: celery -A jobportal worker -l info
    volumes:
      - .:/app
    environment:
      POSTGRES_DB: jobportal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345@123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jobportal_celery_beat
    restart: always
    depends_on:
      - redis
      - db
      - web
    command: celery -A jobportal beat -l info
    volumes:
      - .:/app
    environment:
      POSTGRES_DB: jobportal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345@123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379

volumes:
  postgres_data: